// create database and collections
use techshop
db.createCollection("Users")
db.users.createIndex({ "name": 1 })
db.createCollection("Products")
db.createCollection("Transactions")


// Insert sample users
db.users.insertMany([
    { _id: 1001, name: "Alice", email: "alice@example.com", password: "hashed_password1" },
    { _id: 1002, name: "Bob", email: "bob@example.com", password: "hashed_password2" },
    { _id: 1003, name: "Carol", email: "carol@example.com", password: "hashed_password3" }
  ]);
  
  // Insert sample products
  db.products.insertMany([
    { _id: 2001, name: "Laptop X", description: "High-performance laptop", price: 1200, seller_id: 1001 },
    { _id: 2002, name: "Smartphone Y", description: "Flagship smartphone", price: 800, seller_id: 1002 },
    { _id: 2003, name: "Headphones Z", description: "Noise-canceling headphones", price: 150, seller_id: 1003 },
    { _id: 2004, name: "Tablet A", description: "10-inch tablet", price: 300, seller_id: 1001 },
    { _id: 2005, name: "Smartwatch B", description: "Fitness tracker", price: 100, seller_id: 1002 }
]);
  
  // Insert sample transactions
  db.transactions.insertMany([
    { buyer_id: 1001, product_id: 2001, date: ISODate("2024-03-20"), quantity: 2 },
    { buyer_id: 1002, product_id: 2002, date: ISODate("2024-03-21"), quantity: 1 },
    { buyer_id: 1003, product_id: 2003, date: ISODate("2024-03-22"), quantity: 3 }
]);
 
  

// query to find all products listed by a specific user:
db.products.find({ userId: ObjectId("65ff3109a3e8c71fd08bf203") })


//query to find the total amount spent by a specific user:

db.transactions.aggregate([
  { $match: { buyerId: ObjectId("65ff3109a3e8c71fd08bf203") } },
  { $lookup: {
     from: "products",
     localField: "productId",
     foreignField: "_id",
     as: "productDetails"
  }},
  { $unwind: "$productDetails" },
  { $group: {
     _id: "$buyerId",
     totalSpent: { $sum: { $multiply: ["$quantity", "$productDetails.price"] } }
  }}
])


// query to find the top 5 most popular products 

db.transactions.aggregate([
  { $group: {
     _id: "$productId",
     count: { $sum: 1 }
  }},
  { $sort: { count: -1 } },
  { $limit: 5 },
  { $lookup: {
     from: "products",
     localField: "_id",
     foreignField: "_id",
     as: "productDetails"
  }},
  { $unwind: "$productDetails" }
])
